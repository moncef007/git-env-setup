#!/bin/bash
# git-sync - Sync local branch with remote
# Usage: git sync [branch]

set -e

if [ -n "$1" ]; then
    BRANCH="$1"
else
    BRANCH=$(git symbolic-ref --short HEAD 2>/dev/null || echo "")
    if [ -z "$BRANCH" ]; then
        echo -e "âœ— Not on a branch"
        exit 1
    fi
fi

echo -e "ðŸ”„ Syncing branch: $BRANCH"

if ! git ls-remote --exit-code --heads origin "$BRANCH" &>/dev/null; then
    echo -e "âš  Branch '$BRANCH' doesn't exist on remote"
    read -p "Push branch to remote? [y/N] " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git push -u origin "$BRANCH"
        echo -e "âœ“ Branch pushed to remote"
    fi
    exit 0
fi

STASH_NEEDED=false
if ! git diff-index --quiet HEAD --; then
    echo -e "âš  Stashing uncommitted changes..."
    git stash push -m "Auto-stash by git-sync $(date +%Y-%m-%d_%H:%M:%S)"
    STASH_NEEDED=true
fi

echo "Fetching from origin..."
git fetch origin "$BRANCH"

LOCAL=$(git rev-parse @)
REMOTE=$(git rev-parse @{u})
BASE=$(git merge-base @ @{u})

if [ "$LOCAL" = "$REMOTE" ]; then
    echo -e "âœ“ Already up to date"
elif [ "$LOCAL" = "$BASE" ]; then
    echo "Fast-forwarding..."
    git merge --ff-only origin/"$BRANCH"
    echo -e "âœ“ Successfully synced"
elif [ "$REMOTE" = "$BASE" ]; then
    echo -e "âœ“ Your branch is ahead of remote"
    read -p "Push changes? [y/N] " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git push origin "$BRANCH"
        echo -e "âœ“ Changes pushed"
    fi
else
    echo -e "âš  Branches have diverged"
    echo "Options:"
    echo "  1) Rebase (recommended)"
    echo "  2) Merge"
    echo "  3) Abort"
    read -p "Choose [1-3]: " -n 1 -r
    echo
    
    case $REPLY in
        1)
            git rebase origin/"$BRANCH"
            echo -e "âœ“ Successfully rebased"
            ;;
        2)
            git merge origin/"$BRANCH"
            echo -e "âœ“ Successfully merged"
            ;;
        *)
            echo "Aborted"
            ;;
    esac
fi

if [ "$STASH_NEEDED" = true ]; then
    echo "Restoring stashed changes..."
    if git stash pop; then
        echo -e "âœ“ Changes restored"
    else
        echo -e "âœ— Conflicts while restoring stash"
        echo -e "  Resolve conflicts and run: git stash drop"
        exit 1
    fi
fi

echo -e "âœ“ Sync complete!"