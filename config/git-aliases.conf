[alias]

# --- Core Shortcuts ---
st      = status -sb                      # Show short status with branch info
co      = checkout                        # Switch branches or restore files
cob     = checkout -b                     # Create and switch to a new branch
br      = branch                          # List branches
ci      = commit                          # Commit changes
cm      = commit -a -m                    # Commit changes
cam     = !git add -A && git commit -m    # Stage all and commit with message
amend   = commit -a --amend               # Amend last commit with staged changes
wip     = commit -am "WIP"                # Commit all with message 'WIP'
undo    = reset HEAD~1 --mixed            # Undo last commit but keep changes
unstage = reset -q HEAD --                # Unstage file changes
discard = checkout --                     # Discard file changes

# --- Rebase & Fixup ---
squash = "!f() { git rebase -i HEAD~${1:-2}; }; f"                            # Interactive rebase last N commits

# --- Logging & History ---
ll      = log --oneline
lgs     = log --oneline --simplify-by-decoration --graph --all
history = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
slog    = log --pretty=format:'%C(auto)%h %C(red)%as %C(blue)[%aN]%C(auto)%d%C(white) %s'                      # Short log with date v2
last    = log -1 HEAD --stat                             # Show last commit
latest = !"git ll -1"                                    # Show last commit in ll alias format

# --- Diff, Blame, Files ---
df        = diff                                                                  # Show unstaged changes
wdf     = diff -w --word-diff=color --ignore-space-at-eol                         # Show unstaged changes evolved
files     = "!f() { git diff-tree --no-commit-id --name-only -r ${1-HEAD}; }; f"  # List changed files in a commit
blames     = blame -w -C -C                                                        # Annotate lines with commit info
find      = !git ls-files | grep -i                                               # Case-insensitive file search
se        = !git rev-list --all | xargs git grep -F                               # Search for specific strings in commit

# --- Branch Handling ---
branches     = branch -a                                                                                  # List all branches (local & remote)
delete       = branch -d                                                                                  # Delete a local branch
fdelete       = branch -D                                                                                 # Force delete a local branch
bclean       = !git gone | xargs -r git branch -D                                                         # Delete all local branches whose remote is gone
bdone        = "!f() { DEFAULT=$(git default); git checkout ${1-$DEFAULT} && git up && git bclean; }; f"  # Switch to default/target, update and clean branches
bdone-squash = "!f() { DEFAULT=$(git default); git checkout ${1-$DEFAULT} && git up && git bclean-squash ${1-$DEFAULT}; }; f"  # Same as above but only squash-merged branches
gone = "!git for-each-ref --format='%(refname:short) %(upstream:track)' refs/heads/ | awk '$2 == \"[gone]\" { print $1 }'"     # List local branches with gone upstream

# --- Remote Operations ---
po = !git push origin "$(git rev-parse --abbrev-ref HEAD)"                     # Push to origin                 
pof = !git push -f origin "$(git rev-parse --abbrev-ref HEAD)"                 # Push to origin with force
pl = pull --rebase                                                             # Pull with rebase
up = !git pull --rebase --prune $@ && git submodule update --init --recursive  # Update with rebase and submodules
remotes = remote -v                                                            # List remotes

# --- Tools & Info ---
aliases = "!git config -l | grep ^alias\\. | cut -c 7-"                                 # List all aliases
whoami  = config user.name                                                              # Show Git user name
myemail = config user.email                                                             # Show Git user email
default = !git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'  # Show default remote branch
ec      = config --global -e                                                            # Edit global config
gl      = config --global -l                                                            # Show global config
url     = config --get remote.origin.url                                                # Show repo url